
Default docker file name without extension: Dockerfile

Lesson 10:
Docker commands

-------------------------------------------
Create docker file:   docker build -t <tage-name> .
    * -t ---> Tag name
    * . --> current directory

----------------------------------------------
List created docker files in system : docker images (or) docker image ls   


--------------------------------------------------
Run JS file from Docker image: docker run <tage-name>


-------------------------------------------------------
Pull image from docker hub and store the local machine
    cmd: docker pull <repository-name>/<image-container-name>


-----------------------------------------------------------------
cmd: docker run ubuntu --> This command helps to install images locally and run the image

-----------------------------------------------------------------
cmd: docker ps --> shows the running process and container

-----------------------------------------------------------------
cmd: docker ps -a ------> It shows stopped containers also

-----------------------------------------------------------------
cmd: docker run -it ubuntu ---> (-it) This means interative mode it execute the Ubuntu CLI

------------------------------------------------

cmd: docker run -p <LOCAL_PORT>:<EXPOSE_PORT> <IMAGE_NAME>  ----> "<LOCAL_PORT>:<EXPOSE_PORT>" following this part connect to the system localhost port to container
                                                                    exposed port


================================ Docker run cmd
cmd: dokcer start <CONTAINER_NAME> ----> This cmd run already existing container, not creat new container

cmd: docker logs <CONATINER_NAME>   ----> Prints's  Already existing logs (eg: console.log('log')) , note: "once container should up and ruunig"

cmd: docker logs -f <CONATINER _NAME>  ----> This cmd will print future logs

cmd: docker start -a <CONTAINER_NAME>   ----> This shorthand of attached mode (Print logs)

cmd: docker start -d <CONTAINER_NAME>   ----> Shorthand cmd for detached mode (No logs print)

cmd: docker start -it <CONTAINER_NAME>  --> This will run the container with intercative mode

cmd: docker start -a -i <CONTAINER_NAME> ----> This run with acttached with iteractive mode (You can give input, and get output in terimina)
                                                eg: if your runing python code with some input and get output the above mention cmd will heplful

========================== Remove image and containers

cmd: docker rm <CONATINER_NAM>    ----> Remove the specified container

cmd: docker rm <CONATINER_NAM_1> <CONATINER_NAM_2>   ----> Removed multiple container with single cmd

**note: If you want to delete image , first you should remove respective CONTAINER for that particular image

cmd: docker rmi <IMAGE_ID (OR) TAGE_NAME>  ----> Remove image

cmd: docker rmi <IMAGE_ID (OR) TAGE_NAME 1> <IMAGE_ID (OR) TAGE_NAME 2> ----> Remove more images

cmd: docker run -p <LOCAL_PORT>:<EXPOSE_PORT> -d --rm <IMAGE_ID or NAME>   ----> '--rm' flag will delete once you 'stop' the container, '-d' we specified is detached or attached mode (OPTIONAL)


================================Inspect images
cmd: docker image inspect <IMAGE_NAME>  ----> This cmd list the all details and meta-data about the given image


===================================== TAG NAME for IMAGES and containers
cmd: docker build -t <CUSTOM_IMAGE_NAME:CUSTOM_TAGE_NAME>  ----> This will create custom image and tag names

cmd docker run -p <LOCAL_PORT>:<EXPOSE_PORT> -d --rm --name <CUSTOM_CONATINER_NAME> <IMAGE_NAME>: ----> Following cmd will create custom container name, whatever name you want just give after the '--name' flag ,  '-d --rm'  flag are OPTIONAL
